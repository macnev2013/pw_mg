name: Playwright Tests
on:
  workflow_dispatch:
    inputs:
      number_of_runs:
        description: 'Number of runs'
        required: false
        default: 30
        type: number
  schedule:
    - cron: "*/7 * * * *"
jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "Creating a matrix with ${{ github.event.inputs.number_of_runs }} runs"
          matrix="{\"instance\": ["
          for i in $(seq 1 ${{ github.event.inputs.number_of_runs }}); do
            matrix+="\"$i\""
            if [ $i -lt ${{ github.event.inputs.number_of_runs }} ]; then
              matrix+=", "
            fi
          done
          matrix+="]}"
          echo "Matrix: $matrix"
          echo "::set-output name=matrix::$matrix"

  test:
    needs: setup-matrix
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 30
      matrix: ${{fromJson(needs.setup-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: macnev2013/p_pw_mg
        token: ${{ secrets.ACCESS_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Ensure browsers are installed
      run: python -m playwright install

    - name: 1. Run
      run: python main.py
      env:
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
        LOGIN_URL: ${{ secrets.LOGIN_URL }}
        BROWSER_STATE: ${{ secrets.BROWSER_STATE_1 }}

    - name: 2. Run
      run: python main.py
      env:
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
        LOGIN_URL: ${{ secrets.LOGIN_URL }}
        BROWSER_STATE: ${{ secrets.BROWSER_STATE_1 }}

    - name: 3. Run
      run: python main.py
      env:
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
        LOGIN_URL: ${{ secrets.LOGIN_URL }}
        BROWSER_STATE: ${{ secrets.BROWSER_STATE_1 }}

    - name: 4. Run
      run: python main.py
      env:
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
        LOGIN_URL: ${{ secrets.LOGIN_URL }}
        BROWSER_STATE: ${{ secrets.BROWSER_STATE_1 }}
